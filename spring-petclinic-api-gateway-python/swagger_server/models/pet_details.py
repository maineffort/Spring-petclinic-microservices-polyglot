# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.pet_type import PetType  # noqa: F401,E501
from swagger_server.models.visit_details import VisitDetails  # noqa: F401,E501
from swagger_server import util


class PetDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, birth_date: str=None, id: int=None, name: str=None, type: PetType=None, visits: List[VisitDetails]=None):  # noqa: E501
        """PetDetails - a model defined in Swagger

        :param birth_date: The birth_date of this PetDetails.  # noqa: E501
        :type birth_date: str
        :param id: The id of this PetDetails.  # noqa: E501
        :type id: int
        :param name: The name of this PetDetails.  # noqa: E501
        :type name: str
        :param type: The type of this PetDetails.  # noqa: E501
        :type type: PetType
        :param visits: The visits of this PetDetails.  # noqa: E501
        :type visits: List[VisitDetails]
        """
        self.swagger_types = {
            'birth_date': str,
            'id': int,
            'name': str,
            'type': PetType,
            'visits': List[VisitDetails]
        }

        self.attribute_map = {
            'birth_date': 'birthDate',
            'id': 'id',
            'name': 'name',
            'type': 'type',
            'visits': 'visits'
        }

        self._birth_date = birth_date
        self._id = id
        self._name = name
        self._type = type
        self._visits = visits

    @classmethod
    def from_dict(cls, dikt) -> 'PetDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PetDetails of this PetDetails.  # noqa: E501
        :rtype: PetDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def birth_date(self) -> str:
        """Gets the birth_date of this PetDetails.


        :return: The birth_date of this PetDetails.
        :rtype: str
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date: str):
        """Sets the birth_date of this PetDetails.


        :param birth_date: The birth_date of this PetDetails.
        :type birth_date: str
        """

        self._birth_date = birth_date

    @property
    def id(self) -> int:
        """Gets the id of this PetDetails.


        :return: The id of this PetDetails.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this PetDetails.


        :param id: The id of this PetDetails.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this PetDetails.


        :return: The name of this PetDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this PetDetails.


        :param name: The name of this PetDetails.
        :type name: str
        """

        self._name = name

    @property
    def type(self) -> PetType:
        """Gets the type of this PetDetails.


        :return: The type of this PetDetails.
        :rtype: PetType
        """
        return self._type

    @type.setter
    def type(self, type: PetType):
        """Sets the type of this PetDetails.


        :param type: The type of this PetDetails.
        :type type: PetType
        """

        self._type = type

    @property
    def visits(self) -> List[VisitDetails]:
        """Gets the visits of this PetDetails.


        :return: The visits of this PetDetails.
        :rtype: List[VisitDetails]
        """
        return self._visits

    @visits.setter
    def visits(self, visits: List[VisitDetails]):
        """Sets the visits of this PetDetails.


        :param visits: The visits of this PetDetails.
        :type visits: List[VisitDetails]
        """

        self._visits = visits
